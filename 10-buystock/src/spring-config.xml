<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--注册数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--注册SessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--配置数据源，替代hibernate配置中的四元素-->
        <property name="dataSource" ref="dataSource"/>
        <!--其他hibernate配置项-->
        <property name="hibernateProperties">
            <props>
                <!--方言-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--自动建表-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!--显示sql-->
                <prop key="hibernate.show_sql">true</prop>
                <!--格式化sql-->
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
            </props>
        </property>
        <!--映射文件位置-->
        <!--<property name="mappingDirectoryLocations" value="com/swroom/beans"/>-->
        <property name="packagesToScan" value="com.swroom.beans"/>
    </bean>

    <!--注册事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="open*" isolation="DEFAULT" propagation="REQUIRED"/>
            <tx:method name="buyStock" isolation="DEFAULT" propagation="REQUIRED" rollback-for="StockException"/>
        </tx:attributes>
    </tx:advice>

    <!--AOP配置-->
    <aop:config>
        <!--切入点配置，用的是AspectJ的XML实现形式-->
        <aop:pointcut id="stockPointcut" expression="execution(* *..service.*.*(..))"/>
        <!--顾问要配置通知和切入点-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="stockPointcut"/>
    </aop:config>

    <!--注册Dao-->
    <!--<bean id="stockDao" class="com.swroom.dao.impl.StockDaoImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
    <!--<bean id="accountDao" class="com.swroom.dao.impl.AccountDaoImpl">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->

    <!--注册Service-->
    <!--<bean id="stockService" class="com.swroom.service.StockProcessServiceImpl">-->
        <!--<property name="accountDao" ref="accountDao"/>-->
        <!--<property name="stockDao" ref="stockDao"/>-->
    <!--</bean>-->

    <context:component-scan base-package="com.swroom.service, com.swroom.dao"/>



    <!--事务注解驱动-->
    <!--<tx:annotation-driven transaction-manager="txManager"/>-->

    <!--<bean id="stockProxyService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">-->
        <!--&lt;!&ndash;事务管理器&ndash;&gt;-->
        <!--<property name="transactionManager" ref="txManager"/>-->
        <!--&lt;!&ndash;service&ndash;&gt;-->
        <!--<property name="target" ref="stockService"/>-->
        <!--&lt;!&ndash;事务属性&ndash;&gt;-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--&lt;!&ndash;key就是切入点, value就是事务隔离和传播方法配置&ndash;&gt;-->
                <!--<prop key="open*">ISOLATION_DEFAULT,PROPAGATION_REQUIRED</prop>-->
                <!--&lt;!&ndash;受查时异常提交，可以手动指定回滚，方法是用"-StockException"&ndash;&gt;-->
                <!--<prop key="buyStock">ISOLATION_DEFAULT,PROPAGATION_REQUIRED,-StockException</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

</beans>